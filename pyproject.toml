[project]
name = "netcfg"
version = "0.1.0"  # startversie, wordt automatisch aangepast

[tool.semantic_release]
# Waar de versie moet worden aangepast
version_toml = ["pyproject.toml:project.version"]

# Git commit message die changelog ook toevoegt
commit_message = "chore(release): {version}\n\n{changelog}"

# Gebruik Conventional Commits parser
commit_parser = "conventional"

# GitHub repository instellingen
tag_format = "v{version}"
repo_dir = "."

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.changelog]
# Zorg dat changelog altijd wordt bijgewerkt
changelog_file = "CHANGELOG.md"
mode = "update"
insertion_flag = "<!-- version list -->"

[tool.semantic_release.commit_author]
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = [
  "feat", "fix", "perf",
  "build", "chore", "ci", "docs", "style", "refactor", "test"
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
